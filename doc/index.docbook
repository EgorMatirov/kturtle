<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [
  <!ENTITY kapp "&kturtle;"><!-- replace kturtle here -->
  <!ENTITY package "kdenonbeta">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"><!-- change language only here -->
]>

<book lang="&language;">

<bookinfo>
<title>The KTurtle Handbook</title>

<authorgroup>
<author>
<firstname>Anne-Marie</firstname>
<surname>Mahfouf</surname>
<affiliation>
<address><email>annma@kde.org</email></address>
</affiliation>
</author>
</authorgroup>

<!-- TRANS:ROLES_OF_TRANSLATORS -->

<copyright>
<year>2004</year>
<holder>Anne-Marie Mahfouf</holder>
</copyright>

<legalnotice>&FDLNotice;</legalnotice>

<date>2004-01-24</date>
<releaseinfo>0.1</releaseinfo>

<abstract>
<para>
KTurtle is a Logo interpreter for the KDE Desktop.
</para>
</abstract>

<keywordset>
<keyword>KDE</keyword>
<keyword>kdeedu</keyword>
<keyword>KTurtle</keyword>
<keyword>education</keyword>
<keyword>language</keyword>
<keyword>Logo</keyword>
<keyword>instructions</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title>Introduction</title>
          <para>KTurtle is a Logo programming language interpreter for &kde;. The Logo programming language is very easy and thus it can be used by young children. A unique quality of Logo is that the commands or instructions can be translated, so the 'programmer' can program in his or her native language. This makes Logo ideal for teaching kids the basics of programming, mathematics and geometry. One of the reasons many children like Logo is because of the turtle, a programmable icon which can be moved around the screen with simple commands and can be programmed to draw objects.</para>

     <para>The first version Logo programming language was created by Seymour Papert of MIT Artificial Intelligence Laboratory in 1967 as an ofshoot of the LISP programming language. From then many versions of Logo have been released. By 1980 Logo was gaining momentum, with versions for MSX, Commodore, Atari, and IBM PC systems. These versions were mainly for educational purposes. LCSI released MacLogo in 1985 as a tool for professional programmers, but it never caught on. MIT is still maintaining a site on Logo which can be found on: <ulink url="http://el.media.mit.edu/logo-foundation/">http://el.media.mit.edu/logo-foundation/</ulink>.</para>

     <para>Today there are several versions of Logo around which can easily be found on <ulink url="http://el.media.mit.edu/logo-foundation/">MIT's Logo site</ulink> and by a simple <ulink url="http://www.google.com/search?q=logo+programming+kids">google search</ulink>. This version of Logo (KTurtle) is only focused on the educational qualities of the programming language and will not try to suit professional progammers needs.</para>
     
     <para>
     Why Logo? Logo is recommended for teaching kids as you begin by controlling the actions of a cybernetic turtle in a graphic environment that provides immediate feedback. These immediate actions let you "see" what you are thinking. And as you grow, so does Logo, from the immediate graphic environment into a structured and procedural programming environment for exploring mathematics, language, science, computer, number systems and more.
     </para>
     
<para>
KTurtle features:
<itemizedlist>
<listitem><para>
an integrated Logo interpreter, no need to download any other program.
</para></listitem>
<listitem><para>
a powerful editor for the Logo commands with syntax highlighting, line numbering and more.
</para></listitem>
<listitem><para>
a nice "playground" for the turtle where your commands visualized
</para></listitem>
<listitem><para>
context help for each Logo command.
</para></listitem>
<listitem><para>
translation of the Logo commands in 2 languages: Dutch and French.
</para></listitem>
<listitem><para>
full-screen mode
</para></listitem>
</itemizedlist>
</para>
<para>
Not yet written
</para>
<para>

Not yet written
</para>
</chapter>

<chapter id="using-kturtle">
<title>Using KTurtle</title>
<para>The KTurtle mainwindow consists of the editor on the left where you type the Logo instructions and the canvas on the right where the instructions are visualized. The canvas is the turtle playground, it's on the canvas that the turtle actually moves. The toolbar allows you to use quickly some menu items.</para>
<screenshot>
     <screeninfo>Here's a screenshot KTurtle when you start it for the first time</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="mainwindow.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>KLogoTurtle Main Window</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
<sect1 id="kturtle-editor">
<title>The KTurtle Editor</title>
<para>
The KTurtle Editor allows you to type your Logo instructions and code. It can be detached from the window and dragged anywhere on your desktop. It can also be hidden/shown using the View menu, by clicking on Show Editor. 
</para>

<para>
The cursor position is indicated in the statusbar, on the right with the Line number and Column number.
</para>

<para>
Syntax highlighting allows you to learn and type easily the Logo instructions.
</para>
</sect1>
<sect1 id="kturtle-canvas">
<title>The KTurtle Canvas</title>
<para>
The KTurtle Canvas is the area where the commands are visualized. It also can be called the Turtle Playground for young children.
</para>

<para>

</para>

<para>

</para>
</sect1>
</chapter>

<chapter id="logo-programming">
<title>Logo Programming</title>
<para>
You will find here how to program with Logo, starting with easy instructions.
</para>
<sect1 id="first-steps">
<title>First steps with Logo: meet the Turtle!</title>
<sect2 id="directions">
<title>The Turtle moves in 4 directions</title>
<para>Let's start by getting the Turtle moving. Our Turtle can go to 4 directions: forward, backward, on the left and on the right. Remember that you write the instructions in the editor and you click on the Run button to see the turtle moving. These directions instructions are of the form
<screen>
instruction [spacebar] number 
</screen>
and they are listed below.
</para>
<table frame="none">
<title>Instructions for directions</title>
<tgroup cols="2" colsep="5" rowsep="1">
<colspec colname="c1"/>
<tbody>
<row><entry><emphasis role="bold">Instruction</emphasis></entry><entry><emphasis role="bold">Effect on the turtle</emphasis></entry></row>
<row><entry>forward XX </entry><entry>you move forward XX steps (i.e. XX pixels)</entry></row>
<row><entry>backward XX</entry><entry>you move backward XX steps</entry></row>
<row><entry>turnright XX</entry><entry>you turn to the right at an angle of XX degrees</entry></row>
<row><entry>turnleft XX</entry><entry>you turn to the left at an angle of XX degrees</entry></row>
</tbody>
</tgroup>
</table>
<para>
Note that you can also write all instructions in upper case letters, so for example
<screen>
BACKWARD 40
</screen>
will also work and the Turtle will move backwards for 40 steps.
</para>
<para>
To get you started, type:
<screen>
forward 50
</screen>
in the editor and click on the Execute button (the blue round cog). See on the screenshot below what happens: the Turtle move for 50 steps.
</para>
<screenshot>
     <screeninfo>Get the Turtle move forward for 50 steps.</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="forward.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Get the Turtle move forward for 50 steps</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
<para>
If you type 2 instructions in the editor, the turtle will execute them one after the other, in the order they are typed.
</para>
</sect2>
<sect2 id="cleaning">
<title>Cleaning</title>
<para>Now you want to clean the Turtle path! You have 2 special instructions that will get some cleaning. When you type:
<screen>
reset
</screen>
everything will be back to defaults: the canvas will be cleared, the pen color becomes black, the background color comes back to white and the turtle goes back in the middle of the canvas and wait for your instructions.
</para>
<para>
You can also clean the canvas but leave the Turtle where it is and keep the current color of the pen. This is done with the
<screen>
clear
</screen>
command.
</para>
<para>
Usually,you will start with one of these commands, preferably <emphasis>reset</emphasis> to ensure the Turtle playground is clean.
</para>
</sect2> 
<sect2 id="print">
<title>Printing</title>
<para>You've seen our Turtle drawing lines as she walks. Of course, you understand that she has a pen! What if you want the Turtle to move and not to draw something? I am sure you have guessed that she will get her pen up.
<screen>
penup
</screen>
get the pen up the canvas and not drawing.
<screen>
pendown
</screen>
will lower the pen again and the Turtle will be able to draw again.
</para> 
<para>
Our Turtle knows how to write! We can display text on the cavas using the command
<screen>
print "some text"
</screen>
Don't forget the " around the text you want to display on the canvas.
</para>
<para>
You will also need to write some comments in the program, to indicate what you want your turtle to do. The program is the text in the editor and once your turtle does exactly what you wanted her to do, you can save that text for showing to your friens. This text is call a program. When you write some words to say what this program does, this can help another person opening your program to understand it better. 
<screen>
# this is a comment
</screen>
The turtle will not execute the etxt after a #, she knows that does not concern her.
</para>
<para>
Let's see those 4 commands in action. 
</para>
<screenshot>
     <screeninfo>Get the Turtle set the pen up and down.</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="print.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Get the Turtle set the pen up and down</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
</sect2>
</sect1>
<sect1 id="calculations">
<title>Simple Calculations</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="variables">
<title>Using Variables: creating 'number containers'</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="strings">
<title>Using strings: creating 'text containers'</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="logic">
<title>Logic: asking the computer simple questions</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="recursion">
<title>Recursion: the Turtle is using itself</title>
<para>
Draw a maze for example
</para>
</sect1>
</chapter>
     
<chapter id="commands">
<title>Command Reference</title>

<sect1  id="kturtle-file-menu">
<title>The <guimenu>File</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>N</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>New</guimenuitem>
</menuchoice></term>
<listitem><para><action>Opens</action> a new document for KTurtle by clearing both the editor and the canvas.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>O</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Open</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> a file. It launches a KDE open file dialog box which waits for you to select the file you want. Just click on the choosen file with a .logo extension and this file will be loaded in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>File</guimenu>
<guimenuitem>Open Recent</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> recently viewed files. You can see a submenu with the names of the recently viewed files.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>E</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Open Examples</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> a dialog that allows you to choose an example of a .logo file. The examples files are translated in several languages so be sure to get a file that matches the Language setting you currently have in KTurtle.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Alt;<keycap>Return</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Execute Commands</guimenuitem>
</menuchoice></term>
<listitem><para><action>Run</action> the commands currently written in the editor and display the graphical output in the canvas view.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>S</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Save</guimenuitem>
</menuchoice></term>
<listitem><para><action>Save</action> your file. Use it often so you will not loose your work. If a file is  <emphasis>Untitled</emphasis> then <action>Save</action> becomes <action>Save As</action>.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>File</guimenu>
<guimenuitem>Save As</guimenuitem>
</menuchoice></term>
<listitem><para>Name and rename files with this command. It launches the save file dialog box. Type the name you want to give to your file in the Location field and press <keycap>Enter</keycap> or click the Save button.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>File</guimenu>
<guimenuitem>Save Canvas</guimenuitem>
</menuchoice></term>
<listitem><para><action>Save</action> your drawing which is currently on the canvas. </para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>P</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Print</guimenuitem>
</menuchoice></term>
<listitem><para><action>Print</action> the active file in the editor. This launches the Print KDE dialog.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Q</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Quit</guimenuitem>
</menuchoice></term>
<listitem><para><action>Quit</action> KTurtle.</para></listitem>
</varlistentry>

</variablelist>
</para>
</sect1>

<sect1  id="kturtle-edit-menu">
<title>The <guimenu>Edit</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Z</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Undo</guimenuitem>
</menuchoice></term>
<listitem><para><action>Undo</action> the last editing command (writing, copying, pasting...).</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>Z</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Redo</guimenuitem>
</menuchoice></term>
<listitem><para><action>Redo</action> the last undo step.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>X</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Cut</guimenuitem>
</menuchoice></term>
<listitem><para><action>Remove</action> the selected text if any and place a copy of that selected text in the clipboard.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>C</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Copy</guimenuitem>
</menuchoice></term>
<listitem><para><action>Copy</action> the selected text, if any, to the clipboard.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>V</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Paste</guimenuitem>
</menuchoice></term>
<listitem><para><action>Copy</action> the first item in the clipboardinto the editor at cursor position.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>F</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Find</guimenuitem>
</menuchoice></term>
<listitem><para><action>Launch</action> the Find dialog to allow to search for text in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo><keycap>F3</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Find Next</guimenuitem>
</menuchoice></term>
<listitem><para>Go to the nearest downwards match of the last text or regular expressionsarched for, starting from cursor position.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>R</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Replace...</guimenuitem>
</menuchoice></term>
<listitem><para><action>Launch</action> the Replace dialog to replace one or more instances of a defined text with something else.</para></listitem>
</varlistentry>

</variablelist>
</para>
</sect1>

<sect1  id="kturtle-view-menu">
<title>The <guimenu>View</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>F</keycap></keycombo>
</shortcut>
<guimenu>View</guimenu>
<guimenuitem>Full Screen Mode</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the full screen mode.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo><keycap>F11</keycap></keycombo>
</shortcut>
<guimenu>View</guimenu>
<guimenuitem>Show Line Numbers</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the line numbers in the editor. Setting it on checked will make a pane displaying the line numbers of the document visible in the left border of the  editor, and vice versa.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>View</guimenu>
<guimenuitem>Show Editor</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the editor window to be shown or hidden. Setting it on checked will display the editor and unchecking it will hide the editor. </para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>View</guimenu>
<guimenuitem>Hide Statusbar</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the display of the statusbar. If it is unchecked, the statusbar is displayed. When it is checked, the statusbar is hidden. </para></listitem>
</varlistentry>
</variablelist>
</para>
</sect1>

<sect1  id="kturtle-toolsmenu">
<title>The <guimenu>Tools</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Alt;<keycap>C</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Color Picker</guimenuitem>
</menuchoice></term>
<listitem><para>Brings a dialog that allow you to choose a color and then paste its code in the editor for the pen or background color.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>I</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Indent</guimenuitem>
</menuchoice></term>
<listitem><para>Indent selected code in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>I</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Unindent</guimenuitem>
</menuchoice></term>
<listitem><para>Unindent selected code in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>Tools</guimenu>
<guimenuitem>Clean Indentation</guimenuitem>
</menuchoice></term>
<listitem><para>Use correct indentation for the selected code in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>D</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Comment</guimenuitem>
</menuchoice></term>
<listitem><para>Comment this selection by putting a # at the beginning of each selected line.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>D</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Uncomment</guimenuitem>
</menuchoice></term>
<listitem><para>Uncomment selected code in the editor.</para></listitem>
</varlistentry>
</variablelist>
</para>
</sect1>

<sect1  id="kturtle-settings-menu">
<title>The <guimenu>Settings</guimenu> Menu</title>
<para>
Not yet written
</para>
</sect1>

<sect1  id="kturtle-help-menu">
<title>The <guimenu>Help</guimenu> Menu</title>
<para>
Not yet written
</para>
</sect1>

</chapter>

<chapter id="developers">
<title>Developer's Guide to KTurtle</title>

<para>

Not yet written
</para>
<para>

Not yet written
</para>
</chapter>

<chapter id="translators">
<title>Translator's Guide to KTurtle</title>

<para>
how to translate the commands
</para>
<para>
how to translate the examples
</para>
</chapter>

<chapter id="credits">

<title>Credits and License</title>

<para>
KTurtle
</para>
<para>
Program copyright 2003 Cies Briejs <email>cies@showroommama.nl</email>
</para>
<para>
Contributors:
<itemizedlist>
<listitem><para>Coding help: Anne-Marie Mahfouf<email>annma@kde.org</email></para>
</listitem>
<listitem><para>Author of "wsbasic" (wsbasic.sf.net) which is the base for the interpreter of KTurtle: Walter Schreppers<email>Walter.Schreppers@ua.ac.be</email></para>
</listitem>
</itemizedlist>
</para>

<para>
Documentation copyright 2004 Anne-Marie Mahfouf<email>annma@kde.org</email>
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->

&underFDL;

&underGPL;                 <!-- GPL License -->

</chapter>



<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-kturtle">
<title>How to obtain KTurtle</title>

&install.intro.documentation;

</sect1>

<sect1 id="compilation">
<title>Compilation and Installation</title>

&install.compile.documentation;

</sect1>

</appendix>

&documentation.index;
</book>
<!--
Local Variables:
mode: sgml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:
-->













