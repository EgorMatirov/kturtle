<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [
  <!ENTITY kapp "&kturtle;"><!-- replace kturtle here -->
  <!ENTITY package "kdenonbeta">
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"><!-- change language only here -->
]>

<book lang="&language;">

<bookinfo>
<title>The KTurtle Handbook</title>

<authorgroup>
<author>
<firstname>Anne-Marie</firstname>
<surname>Mahfouf</surname>
<affiliation>
<address><email>annma@kde.org</email></address>
</affiliation>
</author>
<author>
<firstname>Cies</firstname>
<surname>Breijs</surname>
<affiliation>
<address><email>cies # showroommama ! nl</email></address>
</affiliation>
</author>
</authorgroup>

<!-- TRANS:ROLES_OF_TRANSLATORS -->

<copyright>
<year>2004</year>
<holder>Anne-Marie Mahfouf</holder>
</copyright>

<legalnotice>&FDLNotice;</legalnotice>

<date>2004-03-24</date>
<releaseinfo>0.2</releaseinfo>

<abstract>
<para>
KTurtle is an educational programming environment using the Logo programming language.
</para>
</abstract>

<keywordset>
<keyword>KDE</keyword>
<keyword>kdeedu</keyword>
<keyword>KTurtle</keyword>
<keyword>education</keyword>
<keyword>language</keyword>
<keyword>native</keyword>
<keyword>programming</keyword>
<keyword>code</keyword>
<keyword>Logo</keyword>
<keyword>instructions</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title>Introduction</title>

<para>KTurtle is an educational programming environment using the Logo programming language. It tries to make programming as easy and touchable possible. This makes KTurtle suitable for teaching kids the basics of math, geometry and... programming. The commands used to program are in the style of the Logo programming language. The unique feature of Logo is that the commands are often translated into the speaking language of the programmer.</para>

<para>KTurtle is named after 'the turlte' that play a central role in the programming environment. The turlte is programmed,  using the Logo commands,  to draw a picture on the canvas.</para>

<sect1 id="what-is-logo">
<title>What is Logo?</title>
<para>The first version Logo programming language was created by Seymour Papert of MIT Artificial Intelligence Laboratory in 1967 as an ofshoot of the LISP programming language. From then many versions of Logo have been released. By 1980 Logo was gaining momentum, with versions for MSX, Commodore, Atari, and IBM PC systems. These versions were mainly for educational purposes. LCSI released MacLogo in 1985 as a tool for professional programmers, but it never caught on. MIT is still maintaining a site on Logo which can be found on: <ulink url="http://el.media.mit.edu/logo-foundation/">http://el.media.mit.edu/logo-foundation/</ulink>.</para>

<para>Today there are several versions of Logo around which can easily be found on <ulink url="http://el.media.mit.edu/logo-foundation/">MIT's Logo site</ulink> and by a simple <ulink url="http://www.google.com/search?q=logo+programming+kids">google search</ulink>. This version of Logo (KTurtle) is only focused on the educational qualities of the programming language and will not try to suit professional progammers needs.</para>
</sect1>

<sect1 id="features-of-kturtle">
<title>Features of KTurtle</title>
<para>KTurtle has some nice features that make starting to program a breeze. See here some of the highlights of KTurtles feature set:
<itemizedlist>
<listitem><para>
an integrated Logo interpreter, no need to download any other program
</para></listitem>
<listitem><para>
a powerful editor for the Logo commands with intuitive syntax highlighting, line numbering and more
</para></listitem>
<listitem><para>
the canvas can be saved as an image or printed
</para></listitem>
<listitem><para>
context help for all Logo commands, just press F1 with your cursor a command for the help
</para></listitem>
<listitem><para>
KTurtle is fully translationable (currently only English, Dutch and French are supported)
</para></listitem>
<listitem><para>
full-screen mode
</para></listitem>
<listitem><para>
many internationalized examples make it easy to get started
</para></listitem>
</itemizedlist>
</para>
</sect1>
</chapter>

<chapter id="using-kturtle">
<title>Using KTurtle</title>

<screenshot>
  <screeninfo>Here's a screenshot KTurtle when you start it for the first time</screeninfo>
  <mediaobject>
    <imageobject>
      <imagedata fileref="mainwindow_flower_nrs.png" format="PNG"/>
    </imageobject>
    <textobject>
      <phrase>KTurtle's main window</phrase>
    </textobject>
  </mediaobject>
</screenshot>

<para>The main window of KTurtle has two main parts, the code editor(3) on the left where you type the Logo commands and the canvas(2) on the right where the instructions are visualized. The canvas is the turtle's playground, it's on the canvas that the turtle actually moves and draws. Then there are tree other important places on the main window: the menu bar(1) from where all the actions can be reached, the tool bar(2) that allows you to quickly actived some often used actions and the statusbar(5) where you find some feedback on the state of KTurtle.</para>

<sect1 id="the-code-editor">
<title>The Code Editor</title>
<para>In the code editor you to type the Logo commands. It has all features you would expect from a modern editor. Most of its features are found in the Edit and the Tools menu. It can be dragged to each border of the main window or detached and dragged anywhere on your desktop.</para>
<para>Use the Execute action (File->Execute Commands) to execute the code written in the code editor.</para>
</sect1>

<sect1 id="the-canvas">
<title>The Canvas</title>
<para>
The canvas is the place where the commands 'draw' a picture. Most of the commands have an effect on the canvas.</para>
<para>The picture that is drawn can be saved (using File->Save Canvas) or printed (using File->Print).</para>
</sect1>

<sect1 id="the-menu-bar">
<title>The Menu Bar</title>
<para>In the menu bar you find all the actions of KTurtle. There are in the following groups: File, Edit, View, Tools, Settings and Help.</para>

<sect2 id="the-file-menu">
<title>The File Menu</title>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Ctrl;<keycap>N</keycap></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>New</guimenuitem>
      </menuchoice></term>
      <listitem><para>Creates a new, empty logo file.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Ctrl;<keycap>O</keycap></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Open...</guimenuitem>
      </menuchoice></term>
      <listitem><para>Opens a logo file.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <guimenu>File</guimenu>
        <guimenuitem>Open Recent</guimenuitem>
      </menuchoice></term>
      <listitem><para>Opens a logo file.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Ctrl;<keycap>E</keycap></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Examples</guimenuitem>
      </menuchoice></term>
      <listitem><para>Show the folder with examples logo programs. The examples should be in your favorite language that you can choose in here: <guimenu>Setting</guimenu><guimenuitem>Setting</guimenuitem> Language.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Alt;<keysym>Return</keysym></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Execute Commands</guimenuitem>
      </menuchoice></term>
      <listitem><para>Starts the execution of the commands in the code editor.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo><keysym>Escape</keysym></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Stop Execution</guimenuitem>
      </menuchoice></term>
      <listitem><para>Stops the execution, this action is only enabled whet the commands are actually executiong.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Ctrl;<keycap>S</keycap></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Save</guimenuitem>
      </menuchoice></term>
      <listitem><para>Saves the currently opened logo file.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <guimenu>File</guimenu>
        <guimenuitem>Save As...</guimenuitem>
      </menuchoice></term>
      <listitem><para>Saves the currently opened logo file on a specified location.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <guimenu>File</guimenu>
        <guimenuitem>Save Canvas</guimenuitem>
      </menuchoice></term>
      <listitem><para>aves the current drawing on canvas into an image.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Ctrl;<keycap>P</keycap></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Print</guimenuitem>
      </menuchoice></term>
      <listitem><para>Prints either the current code in the editor or the current drawing on the canvas.</para></listitem>
    </varlistentry>
  </variablelist>
  <variablelist>
    <varlistentry>
      <term><menuchoice>
        <shortcut>
          <keycombo>&Ctrl;<keycap>Q</keycap></keycombo>
        </shortcut>
        <guimenu>File</guimenu>
        <guimenuitem>Quit</guimenuitem>
      </menuchoice></term>
      <listitem><para>Quits KTurtle.</para></listitem>
    </varlistentry>
  </variablelist>
</sect2>

<sect2 id="the-edit-menu">
  <title>The Edit Menu</title>
  <sect3 id="undo">
  <title>Undo</title>
  <para>Undoes the last change to code. KTurtle has unlimited undo's!</para>
  </sect3>
  <sect3 id="redo">
  <title>Redo</title>
  <para>Redoes an undone change to the code.</para>
  </sect3>
  <sect3 id="cut">
  <title>Cut</title>
  <para>Cuts the selected text from the code editor to the clip board.</para>
  </sect3>
  <sect3 id="copy">
  <title>Copy</title>
  <para>Copies the selected text from the code editor to the clip board.</para>
  </sect3>
  <sect3 id="paste">
  <title>Paste</title>
  <para>Pastes the text from the clip board to the editor.</para>
  </sect3>
  <sect3 id="find">
  <title>Find...</title>
  <para>With this action you can find phrases in the code.</para>
  </sect3>
  <sect3 id="find-next">
  <title>Find Next</title>
  <para>Use this to find the next occurence of the phrase.</para>
  </sect3>
  <sect3 id="replace">
  <title>Replace...</title>
  <para>With this action you can replace phases in the code.</para>
  </sect3>
</sect2>

<sect2 id="the-view-menu">
  <title>The View Menu</title>
  <sect3 id="full-screen-mode">
  <title>Full Screen Mode</title>
  <para>With this action you toggle the full screen mode.</para>
  <para>Note: When code is executed while in full screen mode all but the canvas are hidden. This make is possible to write 'full screen' programs in KTurtle.</para>
  </sect3>
  <sect3 id="show-line-numbers">
  <title>Show Line Numbers</title>
  <para>With this action you can show the line numbers in the code editor.</para>
  </sect3>
</sect2>

<sect2 id="the-tools-menu">
  <title>The Tools Menu</title>
  <para></para>
</sect2>

<sect2 id="the-setting-menu">
  <title>The Settings Menu</title>
  <para></para>
</sect2>

<sect2 id="the-help-menu">
  <title>The Help Menu</title>
  <para></para>
</sect2>

</sect1>

<sect1 id="the-tool-bar">
<title>The Tool Bar</title>
<para>Here you can quickly reach a few of the most used actions.</para>
</sect1>

<sect1 id="the-status-bar">
<title>The Status Bar</title>
<para>On the statusbar you get feedback of the state of KTurtle. On the left side it shows the feedback on the last action. On the right side you find the current location of the cursor.</para>
</sect1>

</chapter>

<chapter id="logo-programming">
<title>Logo Programming (Quick Start)</title>
<para>Here is a quick start to programing with Logo in KTurtle. We start with easy instructions.</para>

<sect1 id="first-steps">
<title>First steps with Logo: meet the Turtle!</title>

<sect2 id="the-turtle-moves">
<title>The Turtle Moves</title>
<para>Let's start by getting the Turtle moving. Our Turtle can move (forwards and backwards) and turn (left and right). Remember, you write the instructions in the editor and click execute (File->Execute Commands) them. Try this for example:
<screen>
forward 90
turnleft 90 
</screen>
When you typed the commands like above in the code editor you might have noticed one or more of the following things:</para>
<para>1. That -- after clicking executing the commands -- the turtle moves up, draws a line and then turns a quater turn to the left. This because you have used the forward and the turnleft command.</para>
<para>2. That the color of the text you typed canged while you where typing it, this is on of the features of the ditor of KTurtle, called: intuitive highlighting -- different type of commands are highlighted differently. This makes reading large blocks of code more easy.</para>
<para>2. That the color of the text you typed canged while you where typing it, this is on of the features of the ditor of KTurtle, called: intuitive highlighting -- different type of commands are highlighted differently. This makes reading large blocks of code more easy.</para>
<table frame="none">
<title>Instructions for directions</title>
<tgroup cols="2" colsep="5" rowsep="1">
<colspec colname="c1"/>
<tbody>
<row><entry><emphasis role="bold">Instruction</emphasis></entry><entry><emphasis role="bold">Effect on the turtle</emphasis></entry></row>
<row><entry>forward XX </entry><entry>you move forward XX steps (i.e. XX pixels)</entry></row>
<row><entry>backward XX</entry><entry>you move backward XX steps</entry></row>
<row><entry>turnright XX</entry><entry>you turn to the right at an angle of XX degrees</entry></row>
<row><entry>turnleft XX</entry><entry>you turn to the left at an angle of XX degrees</entry></row>
</tbody>
</tgroup>
</table>
<para>
Note that you can also write all instructions in upper case letters, so for example
<screen>
BACKWARD 40
</screen>
will also work and the Turtle will move backwards for 40 steps.
</para>
<para>
To get you started, type:
<screen>
forward 50
</screen>
in the editor and click on the Execute button (the blue round cog). See on the screenshot below what happens: the Turtle move for 50 steps.
</para>
<screenshot>
     <screeninfo>Get the Turtle move forward for 50 steps.</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="forward.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Get the Turtle move forward for 50 steps</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
<para>
If you type 2 instructions in the editor, the turtle will execute them one after the other, in the order they are typed.
</para>
</sect2>

<sect2 id="cleaning">
<title>Cleaning</title>
<para>Now you want to clean the Turtle path! You have 2 special instructions that will get some cleaning. When you type:
<screen>
reset
</screen>
everything will be back to defaults: the canvas will be cleared, the pen color becomes black, the background color comes back to white and the turtle goes back in the middle of the canvas and wait for your instructions.
</para>
<para>
You can also clean the canvas but leave the Turtle where it is and keep the current color of the pen. This is done with the
<screen>
clear
</screen>
command.
</para>
<para>
Usually,you will start with one of these commands, preferably <emphasis>reset</emphasis> to ensure the Turtle playground is clean.
</para>
</sect2> 
<sect2 id="printing">
<title>Printing</title>
<para>You've seen our Turtle drawing lines as she walks. Of course, you understand that she has a pen! What if you want the Turtle to move and not to draw something? I am sure you have guessed that she will get her pen up.
<screen>
penup
</screen>
get the pen up the canvas and not drawing.
<screen>
pendown
</screen>
will lower the pen again and the Turtle will be able to draw again.
</para> 
<para>
Our Turtle knows how to write! We can display text on the cavas using the command
<screen>
print "some text"
</screen>
Don't forget the " around the text you want to display on the canvas.
</para>
<para>
You will also need to write some comments in the program, to indicate what you want your turtle to do. The program is the text in the editor and once your turtle does exactly what you wanted her to do, you can save that text for showing to your friens. This text is call a program. When you write some words to say what this program does, this can help another person opening your program to understand it better. 
<screen>
# this is a comment
</screen>
The turtle will not execute the etxt after a #, she knows that does not concern her.
</para>
<para>
Let's see those 4 commands in action. 
</para>
<screenshot>
     <screeninfo>Get the Turtle set the pen up and down.</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="print.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Get the Turtle set the pen up and down</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
</sect2>
</sect1>
<sect1 id="calculations">
<title>Simple Calculations</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="variables">
<title>Using Variables: creating 'number containers'</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="strings">
<title>Using strings: creating 'text containers'</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="logic">
<title>Logic: asking the computer simple questions</title>
<para>
Not yet written
</para>
</sect1>
<sect1 id="recursion">
<title>Recursion: the Turtle is using itself</title>
<para>
Draw a maze for example
</para>
</sect1>
</chapter>
     
<chapter id="commands">
<title>Command Reference</title>

<sect1 id="kturtle-file-menu">
<title>The <guimenu>File</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>N</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>New</guimenuitem>
</menuchoice></term>
<listitem><para><action>Opens</action> a new document for KTurtle by clearing both the editor and the canvas.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>O</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Open</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> a file. It launches a KDE open file dialog box which waits for you to select the file you want. Just click on the choosen file with a .logo extension and this file will be loaded in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>File</guimenu>
<guimenuitem>Open Recent</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> recently viewed files. You can see a submenu with the names of the recently viewed files.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>E</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Open Examples</guimenuitem>
</menuchoice></term>
<listitem><para><action>Open</action> a dialog that allows you to choose an example of a .logo file. The examples files are translated in several languages so be sure to get a file that matches the Language setting you currently have in KTurtle.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Alt;<keycap>Return</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Execute Commands</guimenuitem>
</menuchoice></term>
<listitem><para><action>Run</action> the commands currently written in the editor and display the graphical output in the canvas view.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>S</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Save</guimenuitem>
</menuchoice></term>
<listitem><para><action>Save</action> your file. Use it often so you will not loose your work. If a file is  <emphasis>Untitled</emphasis> then <action>Save</action> becomes <action>Save As</action>.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>File</guimenu>
<guimenuitem>Save As</guimenuitem>
</menuchoice></term>
<listitem><para>Name and rename files with this command. It launches the save file dialog box. Type the name you want to give to your file in the Location field and press <keycap>Enter</keycap> or click the Save button.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>File</guimenu>
<guimenuitem>Save Canvas</guimenuitem>
</menuchoice></term>
<listitem><para><action>Save</action> your drawing which is currently on the canvas. </para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>P</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Print</guimenuitem>
</menuchoice></term>
<listitem><para><action>Print</action> the active file in the editor. This launches the Print KDE dialog.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Q</keycap></keycombo>
</shortcut>
<guimenu>File</guimenu>
<guimenuitem>Quit</guimenuitem>
</menuchoice></term>
<listitem><para><action>Quit</action> KTurtle.</para></listitem>
</varlistentry>

</variablelist>
</para>
</sect1>

<sect1  id="kturtle-edit-menu">
<title>The <guimenu>Edit</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Z</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Undo</guimenuitem>
</menuchoice></term>
<listitem><para><action>Undo</action> the last editing command (writing, copying, pasting...).</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>Z</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Redo</guimenuitem>
</menuchoice></term>
<listitem><para><action>Redo</action> the last undo step.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>X</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Cut</guimenuitem>
</menuchoice></term>
<listitem><para><action>Remove</action> the selected text if any and place a copy of that selected text in the clipboard.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>C</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Copy</guimenuitem>
</menuchoice></term>
<listitem><para><action>Copy</action> the selected text, if any, to the clipboard.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>V</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Paste</guimenuitem>
</menuchoice></term>
<listitem><para><action>Copy</action> the first item in the clipboardinto the editor at cursor position.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>F</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Find</guimenuitem>
</menuchoice></term>
<listitem><para><action>Launch</action> the Find dialog to allow to search for text in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo><keycap>F3</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Find Next</guimenuitem>
</menuchoice></term>
<listitem><para>Go to the nearest downwards match of the last text or regular expressionsarched for, starting from cursor position.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>R</keycap></keycombo>
</shortcut>
<guimenu>Edit</guimenu>
<guimenuitem>Replace...</guimenuitem>
</menuchoice></term>
<listitem><para><action>Launch</action> the Replace dialog to replace one or more instances of a defined text with something else.</para></listitem>
</varlistentry>

</variablelist>
</para>
</sect1>

<sect1  id="kturtle-view-menu">
<title>The <guimenu>View</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>F</keycap></keycombo>
</shortcut>
<guimenu>View</guimenu>
<guimenuitem>Full Screen Mode</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the full screen mode.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo><keycap>F11</keycap></keycombo>
</shortcut>
<guimenu>View</guimenu>
<guimenuitem>Show Line Numbers</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the line numbers in the editor. Setting it on checked will make a pane displaying the line numbers of the document visible in the left border of the  editor, and vice versa.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>View</guimenu>
<guimenuitem>Show Editor</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the editor window to be shown or hidden. Setting it on checked will display the editor and unchecking it will hide the editor. </para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>View</guimenu>
<guimenuitem>Hide Statusbar</guimenuitem>
</menuchoice></term>
<listitem><para><action>Toggle</action> the display of the statusbar. If it is unchecked, the statusbar is displayed. When it is checked, the statusbar is hidden. </para></listitem>
</varlistentry>
</variablelist>
</para>
</sect1>

<sect1  id="kturtle-toolsmenu">
<title>The <guimenu>Tools</guimenu> Menu</title>
<para>
<variablelist>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Alt;<keycap>C</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Color Picker</guimenuitem>
</menuchoice></term>
<listitem><para>Brings a dialog that allow you to choose a color and then paste its code in the editor for the pen or background color.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>I</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Indent</guimenuitem>
</menuchoice></term>
<listitem><para>Indent selected code in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>I</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Unindent</guimenuitem>
</menuchoice></term>
<listitem><para>Unindent selected code in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<guimenu>Tools</guimenu>
<guimenuitem>Clean Indentation</guimenuitem>
</menuchoice></term>
<listitem><para>Use correct indentation for the selected code in the editor.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>D</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Comment</guimenuitem>
</menuchoice></term>
<listitem><para>Comment this selection by putting a # at the beginning of each selected line.</para></listitem>
</varlistentry>
<varlistentry>
<term><menuchoice>
<shortcut>
<keycombo>&Ctrl;<keycap>Shift</keycap><keycap>D</keycap></keycombo>
</shortcut>
<guimenu>Tools</guimenu>
<guimenuitem>Uncomment</guimenuitem>
</menuchoice></term>
<listitem><para>Uncomment selected code in the editor.</para></listitem>
</varlistentry>
</variablelist>
</para>
</sect1>

<sect1  id="kturtle-settings-menu">
<title>The <guimenu>Settings</guimenu> Menu</title>
<para>
Not yet written
</para>
</sect1>

<sect1  id="kturtle-help-menu">
<title>The <guimenu>Help</guimenu> Menu</title>
<para>
Not yet written
</para>
</sect1>

</chapter>

<chapter id="developers">
<title>Developer's Guide to KTurtle</title>

<para>

Not yet written
</para>
<para>

Not yet written
</para>
</chapter>

<chapter id="translators">
<title>Translator's Guide to KTurtle</title>

<para>
how to translate the commands
</para>
<para>
how to translate the examples
</para>
</chapter>

<chapter id="credits">

<title>Credits and License</title>

<para>
KTurtle
</para>
<para>Program copyright 2003-2004 Cies Breijs <email>cies # showroommama ! nl</email></para>
<para>
Contributors:
<itemizedlist>
<listitem><para>Coding help: Anne-Marie Mahfouf<email>annma@kde.org</email></para>
</listitem>
<listitem><para>Author of "wsbasic" (wsbasic.sf.net) which is the base for the interpreter of KTurtle: Walter Schreppers<email>Walter.Schreppers@ua.ac.be</email></para>
</listitem>
</itemizedlist>
</para>

<para>
Documentation copyright 2004 Anne-Marie Mahfouf<email>annma@kde.org</email>
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->

&underFDL;

&underGPL;                 <!-- GPL License -->

</chapter>



<appendix id="installation">
<title>Installation</title>

<sect1 id="getting-kturtle">
<title>How to obtain KTurtle</title>

&install.intro.documentation;

</sect1>

<sect1 id="compilation">
<title>Compilation and Installation</title>

&install.compile.documentation;

</sect1>

</appendix>

&documentation.index;
</book>
<!--
Local Variables:
mode: sgml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:
-->













