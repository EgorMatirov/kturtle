This document goes on the BUGs and WISHes that regarding KTurtle

Chapeters in this documents:

BUGs
 - urgent bugs (small/regular and critical)
 - big ones (that need losts of work)
 - regular ones (the phat cocroach type)
 - small bugs (annoyances that can be considered urgent, ie poisonless musquito's)
 - unconfirmed
 
WISHes
 - important WISHes (that are needed for a 1.0 release and help to fulfill kturtles objectives)
 - less important but nice WISHes
 - WISHes that still have to be discussed

 
 
 
    here we go!
 
 
>>>>> BUGs::Urgent
	a = 1
	b = 5
	if a < 5 and b == 5 [
		print "Hello"
	]
should print Hello, but doesn't. Just a < 5 works correctly, and the same for just b == 5.
-----------> tryed to fix this... probably i have to look into the parser code and into the original WSBASIC implementation


	learn multiplyBySelf (n) [
		r = n * n
		return r
	]
	i = inputwindow "Please enter a number and press OK"
	print i + " multiplied by itself is: " + multiplyBySelf (i)
should print i*i, but prints i instead.  -----> inputwindow allways returns strings!


commenting doesnt work anymore! arg!


>>>>> BUGs::Big
when there is an error, display only the most descriptive error
  -error messages: not all errors, only the 1st or the 2 first. Error message related to language non-compatibility)
  -IRC discussion: every compiler/interpreter should try to recover from a given error and continue if possible the idea is the compiler tryes to recover from the error and so it can tell you if there is more than one error and not just one by compilation attempt it may be assuming you missed a ; and maybe you missed a ( or something elase and following messages are completely wrong)
This can be a big issue, maybe I (cies) will have to learn more on interpreters to know how to properly do this error handling
  -have links in there to corresponing help pages --> see WISHes
  - I pobably need to make an error message class that inherates some dialog thing (it should have: help-link-button, details, short error title and origion (Parse error), 'the-row-of-error', and a small description (maybe the description should contain links to help pagen on certain commands/ methods/ etc.) and maybe even a small hint or hint button      MORE OR LESS DONE
  - I porbably have to refine the way error message get emitted, problems: Ugly-, short-, technical messages. Sometimes more than one messages gets emmitted right now only the 1st msg is shown -- the 1st may not allways point to the 'core of error'.

How to make the errors more descriptive:  (my TODO for tomorow :) 
- store row,col numbers in the tree so the executer can feed rows/cols back    DONE
- learn something about interpreters and errorhandling (check the net)         FOUND NOTHING (ask my neighbour)

-----> line numbering is somehow broken.... most likely in parser/lexer (only (syntax)error from the parsr such)

- try to break up/refine the most common errors
- Reformulate all the error messages after simulating them
- Maybe more desciptive error messages should be triggered by the 'Help on Error" and DubleClick, these messages should be stored in/out-side of the executer,parser, but maybe even better, the errormsg file. I18n should then be easy, and it should supply richtext ((k)html) + links to the manual. (this could be in the same dialog)
- errmsgs should maybe be filtered since there is quite some garbage in the errors that come back.
- possible no newlines in a command this could make the error messages more specific/descriptive.



>>>>> BUGs::Regular
With long lines and wrapping the canvas can get into a endless loop -> 100%CPU, i tried a lot to fix this allready, maybe my solution needs some tuning :).
Maybe i should just catch errors and break that endless loop :)
There is quite some debugging info in the canvas.cpp class to help me solve this eventually
 - see BUGGING LOGO SCRIPTS BELOW


Accept the making and calling of parameterless 'learned' commands (without using the '()')
>> consequece: the interpreter will not now the difference between a typo and a user command, this should be explained in the error message as this is done with most interpreted languages.

cies: get all the commands in the logokeywords.*.xml file working properly, and remove the commands that are not needed:
Need to work eventually:
- input (without window, grabKeyEvents... not easy :)
- sprite* (i'll maybe look into this when i have Qt3.3 which fixes the nasty crashbug that came across)
- 'speed' will come later -- me has to focus and concentrate

would be nice (not in yet):
- ask (print ask 3>0) <.4999 -> "false",  >.5000 -> "true"
- message, just a dialog with sone user defined text
- more expressers: isString, isNumber, isRound
- round()
- true and fasle as cunfiguarables

- <joke> and what about a 'goto' command ( you can never make them mistakes young enough, muahoahoaaaa >:-} ) </joke> well?





>>>>> BUGs::Small




>>>>> BUGs::Unconfirmed
forward 100e does not work: freezes the machine
  - i can confirm this bug, who noted it? "forward 100" and "forward 100e" both 'work' correctly "forward 100e" produces and error, duh...


run command does not work...  I (cies) cant confirm this, who filed this bug? try:
   go 0,0
   x = run "ls"
   print x


annma can you go though the next 2 bugs and supply some more info bout them to me? tnx
- The documentation of "not" seems wrong. Should it be a unary <-- annma
   operator?
- German examples are twice the same (ask Matthias) <--annma




>>>>> WISHes::important
Manual intergration with KTurtle (context-F1-help and several 'help' buttons in dialogs)





>>>>> WISHes::less important but nice
I saw the KD Executer talk on the aKademy... I (cies) want KD Executer tests for KTurtle to better manage the quality! [ maybe this is important, :) ]


the default font can be a bit bigger and sans serif, and default the <tab> on 2 spaces


have a context menu on right-click in the canvas to save the drawing (right-click -> Save Canvas). cies: then also put "print canvas" and "fullscreen" in there


proposal by Simone: have the cursor (the blue bar in katepart) walk with the interpreter


CLI-file-selection (for mimetype eaz)


cies: a fontchooser would be fun
30/12/2003 annma: for the editor font? I can do it ---> default editor font should be bigger and sans serif
04/01/2003 we'll see after the editor part is done





>>>>> WISHes::still subject to discussion
commands do not follow usual commands like forward is FD, reference: http://asijonline.net/ep/logo/logo_com.htm
  -is there a logo standardisation? Compatibility is something that i (cies) would think is overdone. Logo is only used for a short moment, to learn programming; it will never produce real-world programs. So?


Preview in konqueror: (from IRC discussion about the preview thing a mimetype and a litle kpart-previewer would not be too dificult wouldn't it
<TSDgeos> you could put the widget you use in klogo in the kpart in read only mode
<polux> yeah good idea, instead of including it as a katepart, making a kturtlepart)
<cies> we could but what is the use of it? will it help to fulfill kturtles objectives?


Translating data in the knewstuff.xml file: how would the translators access the file which is on the server?
  - i dunno what's ment by this.. annma?



After a conversiation with lypanov I came to the conclusion that making the executer 'statefull' is a very by thing! So I take the cheap approach using kapp->processEvents();... Maybe someday, later, I'll do it neatly -- the lypanov pointed out. FIXED



annma - 29th December 2003
about the resizing
I think the canvas size should fill all the right side under the toolbar when KTurtle is started. When resizing the window with the mouse, the canvas grows bigger, everything resize smoothly (-> resizeEvent( QResizeEvent * )).
You can leave the resizing option of the canvas in the Settings but only for having the canvas bigger. That would mean setting minimums in the config dialog.

cies: Sorry i have to disagree, let me explain: a lot of logoscripts will be written on a certain canvas size, if the canvas is made bigger the script will give 'broken' output. I also dont have a way to update the 'wrapping' if a canvas is resized. IMHO the canvassize should be changed by a command, nl. canvassize x,y -- which works on my side of mother earth :-) IMHO all changes to the canvas MUST be done by commands and not by clicky-clicky... Putting the 'initial canvas size' in the settings window is only for the teatcher to setup all his computers.

Sorry for beeing so inflexible... *Really*  I am still open for discussion! :-) I just have developed a certain vision of KTurtle's future that is really hard to let go.
(annma 30/12/2003 ok then, but the config option should be made clearer that the new canvas size will be next start)



Annma: Idea from my daughter: have a Tux and a Konqui as alternate turtle for the cursor. I don't know if it's possible and if you like it ;)

cies: That is a good plan!  I have tux allready in my sprites dir (I'm a fan too!)... but there's one nice thing about the turtle: this animal is very regocnisable from above, and the head points in the direction of movement. Tux is more a front faced character, so nice would be to have an option to put the automatic turning off, and to have a different method to turn tux by command. [please note that i wont do any extra work on getting qt3.3 (needed for sprites), it comes when it comes]



  


>>>> TROUBLE LOGO SCRIPTS!!!!!

# due to lines 
reset
canvassize 350,348
canvascolor 0,0,0
center
for x = 1 to 255 [
  fw x
  pencolor x, 255 - x, 255 - x
  tr x / 65
]

# due to lines
reset
canvassize 350,350
center
for x = 1 to 255 [
  fw x*x
  tr x
]




>>>> RECENTLY FIXED BUGs

- settings->configure cauzes crash FIXED thanks to Martijn Klingens  ->  move "LanguageLabel = new QLabel(kcfg_LanguageComboBox..." down a few lines (after kcfg_LanguageComboBox is init'ed) BACKPORT

- default language translation somehow doesnt work, it seems NO Logo language is selected at all FIXED
- this also results in no examples FIXED


- About the language: when user is set to fr (not fr_FR but fr like me being in Canada), the parsing does not   work because Settings::LogoLanguage() is set to fr and NOT to fr_FR.
  Syntax highlighting does not work for fr        DONE annma
 
- Default does not work in Language ComboBox -> I am not sure your use of KConfig XT is optimum here, Cies
  and other bug: output: kturtle: desktopLanguage: fr:en_US
  kturtle: defaultLanguage: en_US
  Why is not default Language fr_FR?              DONE annma 02/04/2004

- open recent does not keep the files after quitting DONE annma 02/04/2004

- crash on quitting after Opening files           DONE annma 02/04/2004

- cies: Make the interpreter (stolen from wsbasic.sf.net) (executer, parser, lexer, number and treenode) more native Qt. Right now they are a mixture of standard-CLI-C++ and Qt thingies (i put the Qt thingies there). I tried do that but i found that i'm not comfortable with the concept of streams -- which are used a lot in the interpreter. Especially streaming QString was an obstacle i couldnt take.     DONE
>>>>> after this is done we can also make the ()[],.""-configurable



cies: The KconfigXT issue: If an error like this
"""
  make[4]: Entering directory `/home/cies/kdenonbeta/kturtle/src'
  ./kturtle.kcfg ./settings.kcfgc; ret=$?; \
  if test "$ret" != 0; then rm -f settings.h ; exit $ret ; fi
  /bin/sh: line 1: ./kturtle.kcfg: Permission denied
  make[4]: *** [settings.h] Error 126
"""
happends when make'ing KTurtle form cvs one should change the first line of configure.in.in from:
  #MIN_CONFIG(3.0)
into:
  #MIN_CONFIG(3.2)
that will fix it :-)   FIXED with KDE 3.3 (I suspect)



- display the current command language in StatusBar? DONE apperently


print command is buggy, examples:        FIXED!
      print 2004 + " before " + 25
   from the manual should output
      "2004 before 25"
   according to the comment, but outputs
      "2029"