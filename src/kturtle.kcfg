<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE kcfg SYSTEM "http://www.kde.org/standards/kcfg/1.0/kcfg.dtd">
<kcfg> 
<kcfgfile name="kturtlerc"/> 
  <group name="general"> 
    <entry name="CanvasWidth" type="Int"> 
      <label>The height of the canvas in pixels</label> 
      <default>300</default>
    </entry>
    <entry name="CanvasHeight" type="Int"> 
      <label>The height of the canvas in pixels</label> 
      <default>250</default>
    </entry>       
  </group>
  <group name="language">
    <entry name="LogoLanguageList" type="StringList">
      <!--This StingList is used in the above LogoLanguage AND in the settingsdialog to fill the ComboBox. Better not to dupe the code that does this.-->
      <label>The list the available logo languages</label> 
      <code>
          // We assume keyword and highlight files come in pairs (if not there will be no highlight)
          // First a list is build from all possible language(codes) [en_US, fr, nl, etc.]
          QStringList xmlFiles = KGlobal::dirs()->findAllResources("data", "kturtle/data/*.xml");
          QStringList LogoLanguageList;
          for ( QStringList::Iterator it = xmlFiles.begin(); it != xmlFiles.end(); ++it ) {
              QString xmlFile(*it);
              kdDebug(0) &lt;&lt; "xmlFile: "&lt;&lt; xmlFile &lt;&lt;endl;
              LogoLanguageList += xmlFile.section('.', -2, -2);
          }
      </code>
      <default code="true">LogoLanguageList</default> 
    </entry>
    <entry name="LanguageComboBox" type="Int">
      <!--This is the parameter that actually gets changed (and emits the signal to the dialog)-->
      <label>The value of the ComboBox</label> 
      <default>0</default>
    </entry>
    <entry name="LogoLanguage" type="String">
      <!--This is the String that actually get picked up by the app. It is not directly changeable by the ComboBox but is translated from the Ints that ComboBox LogoLanguageList emits. It is better to have the logic that changes the Ints to Strings at the settings dept.-->
      <label>The language of the Logo commands</label> 
      <code>
          // This the the parameter that is used by the rest of the app
          KConfigBase *globalConf = KGlobal::config();
          globalConf->setGroup("Locale");
          QString desktopLanguage = globalConf->readEntry("Language");
          kdDebug(0) &lt;&lt; "desktopLanguage: "&lt;&lt; desktopLanguage &lt;&lt;endl;
          QString defaultLanguage = "en_US";
          for (QStringList::Iterator it = LogoLanguageList.begin(); it != LogoLanguageList.end(); ++it ) {
              QString testLanguage(*it);
              if (testLanguage == desktopLanguage) { // exact match
                  defaultLanguage = testLanguage;
                  break;
              } else if (testLanguage.left(2) == desktopLanguage) { // close match (no the same dialect)
                  defaultLanguage = testLanguage.left(2);
                  break;
              }
          }
          kdDebug(0) &lt;&lt; "defaultLanguage: "&lt;&lt; defaultLanguage &lt;&lt;endl;
      </code>
      <default code="true">defaultLanguage</default> 
    </entry>
  </group> 
</kcfg>